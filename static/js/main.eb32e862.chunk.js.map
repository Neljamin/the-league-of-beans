{"version":3,"sources":["components/widgets/navbar/index.js","components/widgets/navbar/Navbar.js","components/widgets/footer/index.js","components/widgets/footer/Footer.js","components/widgets/header-image/HeaderImage.js","components/widgets/header-image/index.js","services/contentService.js","components/pages/landing-page/index.js","components/pages/landing-page/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","Component","Footer","Container","textAlign","window","addEventListener","_","debounce","imageHeight","innerHeight","root","document","documentElement","scrollY","scrollBackgroundColor","getComputedStyle","getPropertyValue","style","setProperty","HeaderImage","styled","div","props","image","css","this","client","contentful","space","accessToken","contentId","getEntry","LandingPage","state","contentService","getContent","then","content","body","documentToHtmlString","fields","imageUrl","get","setState","__html","dangerouslySetInnerHTML","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"kZAEeA,G,qLCIP,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,gBAAf,c,GAJoBC,cCFrBC,G,8KCKP,OACI,yBAAKF,UAAU,UACX,kBAACG,EAAA,EAAD,CAAWC,UAAU,SACjB,yBAAKJ,UAAU,mBAAf,yB,GALgBC,c,kWCDpCI,OAAOC,iBAAiB,SAAUC,IAAEC,UAAS,WACzC,IAAMC,EAAmC,GAArBJ,OAAOK,YACrBC,EAAOC,SAASC,gBACtB,GAAIR,OAAOS,QAAUL,EAAa,CAC9B,IAAMM,EAAwBC,iBAAiBL,GAAMM,iBAAiB,oCACtEN,EAAKO,MAAMC,YAAa,4BAA6BJ,QAErDJ,EAAKO,MAAMC,YAAY,4BAA6B,iBAEzD,MAEH,ICbeC,EDaKC,IAAOC,IAAV,KAOX,SAAAC,GAAK,OAAIA,EAAMC,OAASC,YAAf,IACiBF,EAAMC,U,QERvB,M,WAZX,aAAe,oBACXE,KAAKC,OAASC,IAAwB,CAClCC,MAAO,eACPC,YAAa,gD,uDAIVC,GACP,OAAOL,KAAKC,OAAOK,SAASD,O,MCTrBE,E,kDCYX,aAAe,IAAD,8BACV,gBAHJC,MAAQ,GAIJ,EAAKC,eAAiBA,EAFZ,E,gEAKO,IAAD,OAChBT,KAAKS,eAAeC,WAXJ,yBAYXC,MAAK,SAAAC,GACF,IAAMC,EAAOC,+BAAqBF,EAAQG,OAAOF,MAC3CG,EAAYnC,IAAEoC,IAAIL,EAAS,sCACjC,EAAKM,SAAS,CACVL,KAAM,CACFM,OAAQN,GAEZG,kB,+BAMZ,OACI,yBAAK1C,UAAU,gBACX,yBAAKA,UAAU,6BACf,kBAAC,EAAD,CAAawB,MAAOE,KAAKQ,MAAMQ,WAC/B,kBAACvC,EAAA,EAAD,KACI,yBAAK2C,wBAAyBpB,KAAKQ,MAAMK,a,GA5BpBtC,aCK1B8C,MAVf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcC,QACW,cAA7B3C,OAAO4C,SAASC,UAEe,UAA7B7C,OAAO4C,SAASC,UAEhB7C,OAAO4C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1C,SAAS2C,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrB,MAAK,SAAAsB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.eb32e862.chunk.js","sourcesContent":["import Navbar from './Navbar';\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nimport './Navbar.scss';\n\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <div className=\"navbar\">\n                <div className=\"navbar__logo\">\n                    Beans\n                </div>\n            </div>\n        )\n    }\n}\n","import Footer from './Footer';\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\n\nimport './Footer.scss';\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <Container textAlign='right'>\n                    <div className=\"footer__licence\">\n                        Beans &copy; 2020 \n                    </div>\n                </Container>\n            </div>\n        )\n    }\n}","import styled, { css } from 'styled-components';\n\nimport _ from 'lodash';\n\nwindow.addEventListener('scroll', _.debounce(() => {\n    const imageHeight = window.innerHeight * .9;\n    const root = document.documentElement;\n    if (window.scrollY > imageHeight) {\n        const scrollBackgroundColor = getComputedStyle(root).getPropertyValue('--navbar-scroll-background-color');\n        root.style.setProperty( '--navbar-background-color', scrollBackgroundColor);\n    } else {\n        root.style.setProperty('--navbar-background-color', 'transparent');       \n    }\n}, 100));\n\nconst HeaderImage = styled.div`\n    height: 90vh;\n    margin-bottom: 24px;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: 50% 0px;\n\n    ${props => props.image && css`\n        background-image: url(${props.image});\n    `}\n`;\n\nexport default HeaderImage;","import HeaderImage from './HeaderImage';\n\nexport default HeaderImage;\n","import * as contentful from 'contentful';\n\nclass ContentService {\n    constructor() {\n        this.client = contentful.createClient({\n            space: \"mpx8c6msjcdu\",\n            accessToken: \"yX49obCAWPagE4kF5DBdKJNU6lbQwgCz2nDmykXnHM8\"\n        });\n    }\n\n    getContent(contentId) {\n        return this.client.getEntry(contentId);\n    }\n}\n\nexport default new ContentService();\n","import LandingPage from './LandingPage';\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Container } from 'semantic-ui-react';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\n\nimport './LandingPage.scss';\nimport { HeaderImage } from '../../widgets/';\nimport { contentService } from '../../../services';\n\nconst BODY_CONTENT_ID = 'VRC12pE1gJZZmqYDVrE8u';\n\nexport default class LandingPage extends Component {\n    state = {};\n\n    constructor() {\n        super();\n        this.contentService = contentService;\n    }\n\n    componentDidMount() {\n        this.contentService.getContent(BODY_CONTENT_ID)\n            .then(content => {\n                const body = documentToHtmlString(content.fields.body);\n                const imageUrl  = _.get(content, 'fields.headerImage.fields.file.url')\n                this.setState({\n                    body: {\n                        __html: body\n                    },\n                    imageUrl\n                });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"landing-page\">\n                <div className=\"landing-page__main-image\"></div>\n                <HeaderImage image={this.state.imageUrl} />\n                <Container>\n                    <div dangerouslySetInnerHTML={this.state.body}></div>\n                </Container>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nimport './App.scss';\nimport { LandingPage } from './components/pages';\nimport { Navbar, Footer } from './components/widgets';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <LandingPage />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { unregister } from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nunregister();\n"],"sourceRoot":""}