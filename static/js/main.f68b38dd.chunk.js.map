{"version":3,"sources":["components/widgets/navbar/index.js","components/widgets/navbar/Navbar.js","components/widgets/footer/index.js","components/widgets/footer/Footer.js","components/widgets/header-image/HeaderImage.js","components/widgets/header-image/index.js","components/widgets/minecraft-coordinate/index.js","components/widgets/minecraft-coordinate/MinecraftCoordinate.js","services/contentService.js","components/pages/landing-page/index.js","components/pages/landing-page/LandingPage.js","components/pages/minecraft-page/index.js","components/pages/minecraft-page/MinecraftPage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","showLinks","toggleShowLinks","setState","handleLinkClick","window","scrollTo","this","props","links","className","onClick","classNames","map","link","key","route","to","name","Component","Footer","Container","textAlign","addEventListener","_","debounce","imageHeight","innerHeight","root","document","documentElement","scrollY","scrollBackgroundColor","getComputedStyle","getPropertyValue","style","setProperty","StyledHeaderImage","styled","div","image","css","StyledTitle","span","HeaderImage","title","MinecraftCoordinate","x","y","z","description","imageUrl","dangerouslySetInnerHTML","backgroundImage","client","contentful","space","accessToken","contentId","getEntry","LandingPage","contentService","getContent","then","content","documentToHtmlString","fields","get","__html","MinecraftPage","body","item","itemProps","LINKS","App","path","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f68b38dd.chunk.js","sourcesContent":["import Navbar from './Navbar';\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { Link } from \"react-router-dom\";\n\nimport './Navbar.scss';\n\nexport default class Navbar extends Component {\n    state = {\n        showLinks: false\n    }\n\n    toggleShowLinks = () => {\n        this.setState({ showLinks: !this.state.showLinks });\n    }\n\n    handleLinkClick = () => {\n        this.toggleShowLinks();\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        const { links = [] } = this.props;\n        const { showLinks } = this.state;\n\n        return (\n            <div className=\"navbar\">\n                <div className=\"navbar__logo\">\n                    Beans\n                </div>\n                <div className=\"navbar__links\">\n                    <button onClick={this.toggleShowLinks} className=\"navbar__toggle-links-button\">\n                        <span className={classNames('navbar__toggle-links-button-icon', { 'navbar__toggle-links-button-icon--hide': showLinks })}>\n                            <i className='fas fa-bars'></i>\n                        </span>\n                        <span className={classNames('navbar__toggle-links-button-icon', { 'navbar__toggle-links-button-icon--hide': !showLinks })}>\n                            <i className='fas fa-times'></i>\n                        </span>\n                    </button>\n                    {showLinks && <ul className='navbar__link-dropdown'>\n                        {links.map(link => (\n                            <li key={link.route} className='navbar__link-item'>\n                                <Link onClick={this.handleLinkClick} className='navbar__link' to={link.route}>{link.name}</Link>\n                            </li>\n                        ))}\n                    </ul>}\n                </div>\n            </div>\n        )\n    }\n}\n","import Footer from './Footer';\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\n\nimport './Footer.scss';\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <Container textAlign='right'>\n                    <div className=\"footer__licence\">\n                        Beans &copy; 2020 \n                    </div>\n                </Container>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport _ from 'lodash';\n\nwindow.addEventListener('scroll', _.debounce(() => {\n    const imageHeight = window.innerHeight * .9;\n    const root = document.documentElement;\n    if (window.scrollY > imageHeight) {\n        const scrollBackgroundColor = getComputedStyle(root).getPropertyValue('--navbar-scroll-background-color');\n        root.style.setProperty( '--navbar-background-color', scrollBackgroundColor);\n    } else {\n        root.style.setProperty('--navbar-background-color', 'transparent');       \n    }\n}, 100));\n\nconst StyledHeaderImage = styled.div`\n    display: flex;\n    height: 90vh;\n    margin-bottom: 24px;\n    justify-content: center;\n    align-items: center;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: 50% 0px;\n\n    ${props => props.image && css`\n        background-image: url(${props.image});\n    `}\n`;\n\nconst StyledTitle = styled.span`\n    color: var(--white);\n    font-size: 64px;\n    line-height: 64px;\n    text-shadow:\n        -1px -1px 0 var(--black),  \n        1px -1px 0 var(--black),\n        -1px 1px 0 var(--black),\n        1px 1px 0 var(--black);\n`;\n\nexport default class HeaderImage extends Component {\n    render() {\n        const { image, title } = this.props;\n        return (\n            <StyledHeaderImage image={image}>\n                <StyledTitle>\n                    {title}\n                </StyledTitle>\n            </StyledHeaderImage>\n        )\n    }\n}\n","import HeaderImage from './HeaderImage';\n\nexport default HeaderImage;\n","import MinecraftCoordinate from './MinecraftCoordinate';\n\nexport default MinecraftCoordinate;\n","import React, { Component } from 'react';\n\nimport './MinecraftCoordinate.scss';\n\nexport default class MinecraftCoordinate extends Component {\n    render() {\n        const {\n            title,\n            x,\n            y,\n            z,\n            description,\n            imageUrl\n        } = this.props;\n        return (\n            <div className=\"minecraft-coordinate\">\n                <div>\n                    <h2>{title}</h2>\n                    <h3>{x}, {y}, {z}</h3>\n                    <div dangerouslySetInnerHTML={description}></div>\n                </div>   \n                <div className=\"minecraft-coordinate__image\" style={{backgroundImage: `url(${imageUrl})`}}></div>             \n            </div>\n        )\n    }\n}\n","import * as contentful from 'contentful';\n\nclass ContentService {\n    constructor() {\n        this.client = contentful.createClient({\n            space: \"mpx8c6msjcdu\",\n            accessToken: \"yX49obCAWPagE4kF5DBdKJNU6lbQwgCz2nDmykXnHM8\"\n        });\n    }\n\n    getContent(contentId) {\n        return this.client.getEntry(contentId);\n    }\n}\n\nexport default new ContentService();\n","import LandingPage from './LandingPage';\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Container } from 'semantic-ui-react';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\n\nimport './LandingPage.scss';\nimport { HeaderImage } from '../../widgets/';\nimport { contentService } from '../../../services';\n\nconst CONTENT_ID = 'VRC12pE1gJZZmqYDVrE8u';\n\nexport default class LandingPage extends Component {\n    state = {};\n\n    constructor(props) {\n        super(props);\n        this.contentService = contentService;\n    }\n\n    componentDidMount() {\n        this.contentService.getContent(CONTENT_ID)\n            .then(content => {\n                const description = documentToHtmlString(content.fields.description);\n                const imageUrl  = _.get(content, 'fields.headerImage.fields.file.url')\n                this.setState({\n                    description: {\n                        __html: description\n                    },\n                    imageUrl\n                });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"landing-page\">\n                <HeaderImage image={this.state.imageUrl} />\n                <Container>\n                    <div dangerouslySetInnerHTML={this.state.description}></div>\n                </Container>\n            </div>\n        )\n    }\n}\n","import MinecraftPage from './MinecraftPage';\n\nexport default MinecraftPage;","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\n\nimport './MinecraftPage.scss';\nimport { HeaderImage, MinecraftCoordinate } from '../../widgets';\nimport { contentService } from '../../../services';\n\nconst CONTENT_ID = '2engluBafuOhCCaxCbFC6D';\n\nexport default class MinecraftPage extends Component {\n    state = {\n        body: []\n    };\n\n    constructor(props) {\n        super(props);\n        this.contentService = contentService;\n    }\n\n    componentDidMount() {\n        this.contentService.getContent(CONTENT_ID)\n            .then(content => {\n                const description = documentToHtmlString(content.fields.description);\n                const imageUrl  = _.get(content, 'fields.headerImage.fields.file.url');\n                const body = content.fields.body.map(item => {\n                    return {\n                        title: item.fields.title,\n                        x: item.fields.x,\n                        y: item.fields.y,\n                        z: item.fields.z,\n                        description: {\n                            __html: documentToHtmlString(item.fields.description)\n                        },\n                        imageUrl: _.get(item, 'fields.image.fields.file.url')\n                    };\n                });\n                this.setState({\n                    title: content.fields.title,\n                    description: {\n                        __html: description\n                    },\n                    imageUrl,\n                    body\n                });\n            });\n    }\n\n    render() {\n        const { title, imageUrl, description, body } = this.state;\n        return (\n            <div className=\"minecraft-page\">\n                <HeaderImage title={title} image={imageUrl} />\n                <Container>\n                    <div className=\"minecraft-page__description\" dangerouslySetInnerHTML={description}></div>\n                    {body.map(itemProps => (\n                        <MinecraftCoordinate key={itemProps.title} {...itemProps} />\n                    ))}\n                </Container>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route\n} from \"react-router-dom\";\n\nimport './App.scss';\nimport { LandingPage, MinecraftPage } from './components/pages';\nimport { Navbar, Footer } from './components/widgets';\n\nconst LINKS = [\n  {\n    name: 'Home',\n    route: '/'\n  },\n  {\n    name: 'Minecraft',\n    route: '/minecraft'\n  }\n];\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar links={LINKS} />\n      <Route path=\"/minecraft\">\n        <MinecraftPage />\n      </Route>\n      <Route exact path=\"/\">\n        <LandingPage />\n      </Route>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { unregister } from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nunregister();\n"],"sourceRoot":""}