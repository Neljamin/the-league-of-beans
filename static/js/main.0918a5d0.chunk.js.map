{"version":3,"sources":["components/widgets/navbar/index.js","components/widgets/navbar/Navbar.js","components/widgets/footer/index.js","components/widgets/footer/Footer.js","components/widgets/header-image/HeaderImage.js","components/widgets/header-image/index.js","components/pages/landing-page/index.js","components/pages/landing-page/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","Component","Footer","Container","textAlign","window","addEventListener","_","debounce","imageHeight","innerHeight","root","document","documentElement","scrollY","scrollBackgroundColor","getComputedStyle","getPropertyValue","style","setProperty","HeaderImage","styled","div","props","image","css","LandingPage","process","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iOAEeA,G,mLCIP,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,gBAAf,c,GAJoBC,cCFrBC,G,6KCKP,OACI,yBAAKF,UAAU,UACX,kBAACG,EAAA,EAAD,CAAWC,UAAU,SACjB,yBAAKJ,UAAU,mBAAf,yB,GALgBC,c,mXCDpCI,OAAOC,iBAAiB,SAAUC,IAAEC,UAAS,WACzC,IAAMC,EAAmC,GAArBJ,OAAOK,YACrBC,EAAOC,SAASC,gBACtB,GAAIR,OAAOS,QAAUL,EAAa,CAC9B,IAAMM,EAAwBC,iBAAiBL,GAAMM,iBAAiB,oCACtEN,EAAKO,MAAMC,YAAa,4BAA6BJ,QAErDJ,EAAKO,MAAMC,YAAY,4BAA6B,iBAEzD,MAEH,ICbeC,EDaKC,IAAOC,IAAV,KAOX,SAAAC,GAAK,OAAIA,EAAMC,OAASC,YAAf,IACiBF,EAAMC,UErBvBE,E,uKCMP,OACI,yBAAK1B,UAAU,gBACX,yBAAKA,UAAU,6BACf,kBAAC,EAAD,CAAawB,MAAOG,wDACpB,kBAACxB,EAAA,EAAD,KACI,4CACiB,6BADjB,gBAEiB,6BAFjB,gBAGiB,8BAEjB,ufACA,kbACA,wZACA,ufACA,kbACA,wZACA,ufACA,kbACA,wZACA,ufACA,kbACA,8Z,GAvBqBF,aCU1B2B,MAVf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcC,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvB,SAASwB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.0918a5d0.chunk.js","sourcesContent":["import Navbar from './Navbar';\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nimport './Navbar.scss';\n\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <div className=\"navbar\">\n                <div className=\"navbar__logo\">\n                    Beans\n                </div>\n            </div>\n        )\n    }\n}\n","import Footer from './Footer';\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\n\nimport './Footer.scss';\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <Container textAlign='right'>\n                    <div className=\"footer__licence\">\n                        Beans &copy; 2020 \n                    </div>\n                </Container>\n            </div>\n        )\n    }\n}","import styled, { css } from 'styled-components';\n\nimport _ from 'lodash';\n\nwindow.addEventListener('scroll', _.debounce(() => {\n    const imageHeight = window.innerHeight * .9;\n    const root = document.documentElement;\n    if (window.scrollY > imageHeight) {\n        const scrollBackgroundColor = getComputedStyle(root).getPropertyValue('--navbar-scroll-background-color');\n        root.style.setProperty( '--navbar-background-color', scrollBackgroundColor);\n    } else {\n        root.style.setProperty('--navbar-background-color', 'transparent');       \n    }\n}, 100));\n\nconst HeaderImage = styled.div`\n    height: 90vh;\n    margin-bottom: 24px;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: 50% 0px;\n\n    ${props => props.image && css`\n        background-image: url(${props.image});\n    `}\n`;\n\nexport default HeaderImage;","import HeaderImage from './HeaderImage';\n\nexport default HeaderImage;\n","import LandingPage from './LandingPage';\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\n\nimport './LandingPage.scss';\nimport { HeaderImage } from '../../widgets/';\n\nexport default class LandingPage extends Component {\n    render() {\n        return (\n            <div className=\"landing-page\">\n                <div className=\"landing-page__main-image\"></div>\n                <HeaderImage image={process.env.PUBLIC_URL +'/assets/images/landing-main.jpg'} />\n                <Container>\n                    <h1>\n                        We are Beans.<br />\n                        Nothing more.<br />\n                        Nothing less.<br />\n                    </h1>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus enim dolor, vestibulum eget urna sit amet, tempor viverra mauris. In sit amet lacus ultrices, vehicula mi et, convallis elit. Curabitur hendrerit quis libero non venenatis. Donec feugiat leo urna, et blandit nibh tempus vitae. In hac habitasse platea dictumst. Cras auctor urna eu massa imperdiet, non congue erat malesuada. Maecenas in ornare diam. In dui leo, rutrum ac tortor a, eleifend elementum lacus.</p>\n                    <p>Etiam turpis nisi, laoreet quis augue non, consectetur accumsan nisl. Pellentesque egestas dui euismod risus scelerisque posuere. Donec sed semper justo, auctor lobortis eros. Sed quis volutpat odio. Nam suscipit diam nec tincidunt pharetra. Nunc dignissim feugiat velit eget efficitur. Aliquam at dui libero. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.</p>\n                    <p>Nulla semper tincidunt imperdiet. Vivamus viverra dapibus ornare. Maecenas et urna tortor. Sed tristique lorem varius libero luctus pharetra. Suspendisse potenti. Quisque fermentum convallis libero vitae finibus. Donec pulvinar non dolor nec rhoncus. Vivamus ut scelerisque enim, ut rutrum turpis. Phasellus sollicitudin mollis sem. Maecenas aliquam facilisis tellus a euismod.</p>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus enim dolor, vestibulum eget urna sit amet, tempor viverra mauris. In sit amet lacus ultrices, vehicula mi et, convallis elit. Curabitur hendrerit quis libero non venenatis. Donec feugiat leo urna, et blandit nibh tempus vitae. In hac habitasse platea dictumst. Cras auctor urna eu massa imperdiet, non congue erat malesuada. Maecenas in ornare diam. In dui leo, rutrum ac tortor a, eleifend elementum lacus.</p>\n                    <p>Etiam turpis nisi, laoreet quis augue non, consectetur accumsan nisl. Pellentesque egestas dui euismod risus scelerisque posuere. Donec sed semper justo, auctor lobortis eros. Sed quis volutpat odio. Nam suscipit diam nec tincidunt pharetra. Nunc dignissim feugiat velit eget efficitur. Aliquam at dui libero. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.</p>\n                    <p>Nulla semper tincidunt imperdiet. Vivamus viverra dapibus ornare. Maecenas et urna tortor. Sed tristique lorem varius libero luctus pharetra. Suspendisse potenti. Quisque fermentum convallis libero vitae finibus. Donec pulvinar non dolor nec rhoncus. Vivamus ut scelerisque enim, ut rutrum turpis. Phasellus sollicitudin mollis sem. Maecenas aliquam facilisis tellus a euismod.</p>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus enim dolor, vestibulum eget urna sit amet, tempor viverra mauris. In sit amet lacus ultrices, vehicula mi et, convallis elit. Curabitur hendrerit quis libero non venenatis. Donec feugiat leo urna, et blandit nibh tempus vitae. In hac habitasse platea dictumst. Cras auctor urna eu massa imperdiet, non congue erat malesuada. Maecenas in ornare diam. In dui leo, rutrum ac tortor a, eleifend elementum lacus.</p>\n                    <p>Etiam turpis nisi, laoreet quis augue non, consectetur accumsan nisl. Pellentesque egestas dui euismod risus scelerisque posuere. Donec sed semper justo, auctor lobortis eros. Sed quis volutpat odio. Nam suscipit diam nec tincidunt pharetra. Nunc dignissim feugiat velit eget efficitur. Aliquam at dui libero. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.</p>\n                    <p>Nulla semper tincidunt imperdiet. Vivamus viverra dapibus ornare. Maecenas et urna tortor. Sed tristique lorem varius libero luctus pharetra. Suspendisse potenti. Quisque fermentum convallis libero vitae finibus. Donec pulvinar non dolor nec rhoncus. Vivamus ut scelerisque enim, ut rutrum turpis. Phasellus sollicitudin mollis sem. Maecenas aliquam facilisis tellus a euismod.</p>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus enim dolor, vestibulum eget urna sit amet, tempor viverra mauris. In sit amet lacus ultrices, vehicula mi et, convallis elit. Curabitur hendrerit quis libero non venenatis. Donec feugiat leo urna, et blandit nibh tempus vitae. In hac habitasse platea dictumst. Cras auctor urna eu massa imperdiet, non congue erat malesuada. Maecenas in ornare diam. In dui leo, rutrum ac tortor a, eleifend elementum lacus.</p>\n                    <p>Etiam turpis nisi, laoreet quis augue non, consectetur accumsan nisl. Pellentesque egestas dui euismod risus scelerisque posuere. Donec sed semper justo, auctor lobortis eros. Sed quis volutpat odio. Nam suscipit diam nec tincidunt pharetra. Nunc dignissim feugiat velit eget efficitur. Aliquam at dui libero. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.</p>\n                    <p>Nulla semper tincidunt imperdiet. Vivamus viverra dapibus ornare. Maecenas et urna tortor. Sed tristique lorem varius libero luctus pharetra. Suspendisse potenti. Quisque fermentum convallis libero vitae finibus. Donec pulvinar non dolor nec rhoncus. Vivamus ut scelerisque enim, ut rutrum turpis. Phasellus sollicitudin mollis sem. Maecenas aliquam facilisis tellus a euismod.</p>\n                </Container>\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nimport './App.scss';\nimport { LandingPage } from './components/pages';\nimport { Navbar, Footer } from './components/widgets';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <LandingPage />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}