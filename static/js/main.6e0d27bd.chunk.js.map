{"version":3,"sources":["components/widgets/navbar/Navbar.js","components/widgets/footer/index.js","components/widgets/footer/Footer.js","components/widgets/header-image/HeaderImage.js","components/widgets/header-image/index.js","components/widgets/minecraft-coordinate/index.js","components/widgets/minecraft-coordinate/MinecraftCoordinate.js","components/widgets/youtube-video/index.js","components/widgets/youtube-video/YouTubeVideo.js","components/widgets/media-with-description/index.js","components/widgets/media-with-description/MediaWithDescription.js","components/widgets/main-body/index.js","components/widgets/main-body/MainBody.js","components/widgets/loader/index.js","components/widgets/loader/Loader.js","services/contentService.js","services/contentfulService.js","components/widgets/contentful-type-renderer/index.js","components/widgets/contentful-type-renderer/ContentfulTypeRenderer.js","components/page/index.js","components/page/Page.js","App.js","serviceWorker.js","index.js"],"names":["Component","Footer","className","Container","textAlign","window","addEventListener","_","debounce","imageHeight","innerHeight","root","document","documentElement","scrollY","scrollBackgroundColor","getComputedStyle","getPropertyValue","style","setProperty","StyledHeaderImage","styled","div","props","image","css","StyledTitle","span","HeaderImage","this","title","MinecraftCoordinate","x","y","z","description","imageUrl","imageLeft","mediaType","mediaLeft","dangerouslySetInnerHTML","YouTubeVideo","youtubeId","src","frameBorder","MediaWithDescription","children","classNames","backgroundImage","MainBody","Loader","client","contentful","space","accessToken","contentId","getEntry","getEntries","then","entries","items","reduce","acc","item","sys","contentType","id","content","includes","fields","__html","documentToHtmlString","get","youTubeVideoId","ContentfulTypeRenderer","contentfulService","getMinecraftCoordinateProps","getYouTubeVideoProps","Page","state","body","mediaIndex","formattedBody","map","isContentMediaType","setState","route","index","key","App","loading","contentService","getAllPagesContent","pages","links","page","name","path","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6e0d27bd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { Link } from \"react-router-dom\";\n\nimport './Navbar.scss';\n\nexport default class Navbar extends Component {\n    state = {\n        showLinks: false\n    }\n\n    toggleShowLinks = () => {\n        this.setState({ showLinks: !this.state.showLinks });\n    }\n\n    handleLinkClick = () => {\n        this.toggleShowLinks();\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        const { links = [] } = this.props;\n        const { showLinks } = this.state;\n\n        return (\n            <div className=\"navbar\">\n                <div className=\"navbar__logo\">\n                    Beans\n                </div>\n                <div className=\"navbar__links\">\n                    <button onClick={this.toggleShowLinks} className=\"navbar__toggle-links-button\">\n                        <span className={classNames('navbar__toggle-links-button-icon', { 'navbar__toggle-links-button-icon--hide': showLinks })}>\n                            <i className='fas fa-bars'></i>\n                        </span>\n                        <span className={classNames('navbar__toggle-links-button-icon', { 'navbar__toggle-links-button-icon--hide': !showLinks })}>\n                            <i className='fas fa-times'></i>\n                        </span>\n                    </button>\n                    {showLinks && <ul className='navbar__link-dropdown'>\n                        {links.map(link => (\n                            <li key={link.route} className='navbar__link-item'>\n                                <Link onClick={this.handleLinkClick} className='navbar__link' to={link.route}>{link.name}</Link>\n                            </li>\n                        ))}\n                    </ul>}\n                </div>\n            </div>\n        )\n    }\n}\n","import Footer from './Footer';\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\n\nimport './Footer.scss';\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"footer\">\n                <Container textAlign='right'>\n                    <div className=\"footer__licence\">\n                        Beans &copy; 2020 \n                    </div>\n                </Container>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport _ from 'lodash';\n\nwindow.addEventListener('scroll', _.debounce(() => {\n    const imageHeight = window.innerHeight * .9;\n    const root = document.documentElement;\n    if (window.scrollY > imageHeight) {\n        const scrollBackgroundColor = getComputedStyle(root).getPropertyValue('--navbar-scroll-background-color');\n        root.style.setProperty( '--navbar-background-color', scrollBackgroundColor);\n    } else {\n        root.style.setProperty('--navbar-background-color', 'transparent');       \n    }\n}, 100));\n\nconst StyledHeaderImage = styled.div`\n    display: flex;\n    position: relative;\n    height: 90vh;\n    margin-bottom: 24px;\n    justify-content: center;\n    align-items: center;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: 50% 0px;\n\n    &:after {\n        content: '';\n        position: absolute;\n        top: 0; left: 0; bottom: 0; right: 0;\n        background: radial-gradient(transparent 50%, black), transparent;\n        height: 100%;\n    }\n\n    ${props => props.image && css`\n        background-image: url(${props.image});\n    `}\n`;\n\nconst StyledTitle = styled.span`\n    color: var(--white);\n    font-size: 64px;\n    line-height: 64px;\n\n    @media (max-width: 500px) {\n        font-size: 32px;\n        line-height: 32px;\n    }\n\n    text-shadow:\n        -1px -1px 0 var(--black),  \n        1px -1px 0 var(--black),\n        -1px 1px 0 var(--black),\n        1px 1px 0 var(--black);\n`;\n\nexport default class HeaderImage extends Component {\n    render() {\n        const { image, title } = this.props;\n        return (\n            <StyledHeaderImage image={image}>\n                <StyledTitle>\n                    {title}\n                </StyledTitle>\n            </StyledHeaderImage>\n        )\n    }\n}\n","import HeaderImage from './HeaderImage';\n\nexport default HeaderImage;\n","import MinecraftCoordinate from './MinecraftCoordinate';\n\nexport default MinecraftCoordinate;\n","import React, { Component } from 'react';\n\nimport './MinecraftCoordinate.scss';\nimport { MediaWithDescription } from '../';\n\nexport default class MinecraftCoordinate extends Component {\n    render() {\n        const {\n            title,\n            x,\n            y,\n            z,\n            description,\n            imageUrl,\n            imageLeft\n        } = this.props;\n        return (\n            <MediaWithDescription\n                mediaType=\"image\"\n                imageUrl={imageUrl}\n                mediaLeft={imageLeft}\n            >\n                <h2>{title}</h2>\n                <h3>{x}, {y}, {z}</h3>\n                <div dangerouslySetInnerHTML={description}></div>\n            </MediaWithDescription>\n        )\n    }\n}\n","import YouTubeVideo from './YouTubeVideo';\n\nexport default YouTubeVideo;\n","import React from 'react';\n\nimport './YouTubeVideo.scss';\n\nexport default ({ youtubeId }) => {\n\treturn (\n\t\t<div className='youtube-video'>\n\t\t\t<iframe\n\t\t\t\tclassName='youtube-video__iframe'\n                title={youtubeId}\n\t\t\t\tsrc={`https://www.youtube.com/embed/${youtubeId}`}\n\t\t\t\tframeBorder=\"0\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","import MediaWithDescription from './MediaWithDescription';\n\nexport default MediaWithDescription;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\n\nimport './MediaWithDescription.scss';\nimport { YouTubeVideo } from '../';\n\nexport default class MediaWithDescription extends Component {\n    render() {\n        const {\n            children,\n            imageUrl,\n            mediaType = 'image',\n            mediaLeft,\n            youtubeId\n        } = this.props;\n        return (\n            <div className={classNames('media-with-description', {\n                'media-with-description--media-left': mediaLeft\n            })}>\n                <div className='media-with-description__description'>\n                    {children}\n                </div>\n                <div\n                    className={classNames('media-with-description__media', {\n                        'media-with-description__media--media-left': mediaLeft\n                    })}\n                >\n                    { mediaType === 'image' && \n                        <div\n                            className='media-with-description__image'\n                            style={{backgroundImage: `url(${imageUrl})`}}\n                        ></div>\n                    }\n                    { mediaType === 'youtube' &&  <YouTubeVideo youtubeId={youtubeId} />}\n                </div>             \n            </div>\n        )\n    }\n}\n","import MainBody from './MainBody';\n\nexport default MainBody;\n","import React from 'react';\n\nimport './MainBody.scss';\n\nexport default ({\n    children\n}) => {\n    return (\n        <div className='main-body'>\n            <div className=\"main-body__content\">\n                {children}\n            </div>\n        </div>\n    )\n}\n","import Loader from './Loader';\n\nexport default Loader;\n","import React, { Component } from 'react';\n\nimport './Loader.scss';\n\nexport default class Loader extends Component {\n    render() {\n        return (\n            <div className='loader'>                                                         \n                <div className=\"loader__icon\">\n                    <i className=\"fas fa-spinner\"></i>\n                </div>\n            </div>\n        )\n    }\n}\n","import * as contentful from 'contentful';\n\nclass ContentService {\n    constructor() {\n        this.client = contentful.createClient({\n            space: \"mpx8c6msjcdu\",\n            accessToken: \"yX49obCAWPagE4kF5DBdKJNU6lbQwgCz2nDmykXnHM8\"\n        });\n    }\n\n    getContent(contentId) {\n        return this.client.getEntry(contentId);\n    }\n\n    getAllPagesContent() {\n        return this.client.getEntries()\n            .then(entries => {\n                return entries.items.reduce((acc, item) => {\n                    if (item.sys.contentType.sys.id === 'page') {\n                        return [...acc, item];\n                    }\n                    return [...acc];\n                }, []);\n            });\n    }\n}\n\nexport default new ContentService();\n","import { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport _ from 'lodash';\n\nclass ContentfulService {\n    isContentMediaType(content) {\n        const contentType = content.sys.contentType.sys.id;\n        return ['minecraftCoordinate', 'youTubeVideo'].includes(contentType);\n    }\n\n    getMinecraftCoordinateProps(content) {\n        return {\n            title: content.fields.title,\n            x: content.fields.x,\n            y: content.fields.y,\n            z: content.fields.z,\n            description: {\n                __html: documentToHtmlString(content.fields.description)\n            },\n            imageUrl: _.get(content, 'fields.image.fields.file.url')\n        };\n    }\n\n    getYouTubeVideoProps(content) {\n        return {\n            title: content.fields.title,\n            description: {\n                __html: documentToHtmlString(content.fields.description)\n            },\n            mediaType: 'youtube',\n            youtubeId: content.fields.youTubeVideoId\n        };\n    }\n}\n\nexport default new ContentfulService();\n","import ContentfulTypeRenderer from './ContentfulTypeRenderer';\n\nexport default ContentfulTypeRenderer;\n","import React, { Component } from 'react';\n\nimport { MinecraftCoordinate, MediaWithDescription } from '..';\nimport { contentfulService } from '../../../services';\n\nexport default class ContentfulTypeRenderer extends Component {\n    constructor(props) {\n        super(props);\n        this.contentfulService = contentfulService;\n    }\n\n    render() {\n        const { content, mediaLeft } = this.props;\n        const contentType = content.sys.contentType.sys.id;\n\n        if (contentType === 'minecraftCoordinate') {\n            return <MinecraftCoordinate imageLeft={mediaLeft} {...this.contentfulService.getMinecraftCoordinateProps(content)}/>;\n        }\n\n        if (contentType === 'youTubeVideo') {\n            const { youtubeId, title, description } = this.contentfulService.getYouTubeVideoProps(content);\n            return (\n                <MediaWithDescription mediaLeft={mediaLeft} mediaType='youtube' youtubeId={youtubeId}>\n                    <h2>{title}</h2>\n                    <div dangerouslySetInnerHTML={description}></div>\n                </MediaWithDescription>\n            );\n        }\n\n        return null;\n    }\n}\n","import Page from './Page';\n\nexport default Page;","import React, { Component } from 'react';\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer';\nimport _ from 'lodash';\n\nimport { HeaderImage, MainBody, ContentfulTypeRenderer } from '../widgets';\nimport { contentfulService } from '../../services';\nimport './Page.scss';\n\nexport default class Page extends Component {\n    state = {\n        body: []\n    };\n\n    constructor(props) {\n        super(props);\n        this.contentfulService = contentfulService;\n    }\n\n    componentDidMount() {\n        const { content } = this.props;\n        const body = content.fields.body || [];\n        let mediaIndex = 0;\n        const formattedBody = body.map(item => {\n            let mediaLeft;\n            if (this.contentfulService.isContentMediaType(item)) {\n                mediaLeft = mediaIndex % 2 === 0;\n                mediaIndex++;\n            }\n            return {\n                content: item,\n                mediaLeft\n            }\n        });\n        this.setState({\n            body: formattedBody\n        });\n    }\n\n    render() {\n        const { content } = this.props;\n        const { body } = this.state;\n        const title = content.fields.route !== '/' ? content.fields.title: '';\n        const imageUrl  = _.get(content, 'fields.headerImage.fields.file.url');\n        const description = {\n            __html: documentToHtmlString(content.fields.description)\n        };\n\n        return (\n            <div className=\"page\">\n                <HeaderImage title={title} image={imageUrl} />\n                <MainBody>\n                    <div className=\"page__description\" dangerouslySetInnerHTML={description}></div>\n                    {\n                        body.map((item, index) => {\n                            return <ContentfulTypeRenderer key={index} content={item.content} mediaLeft={item.mediaLeft} />;\n                        })\n                    }\n                </MainBody>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./App.scss\";\nimport { Navbar, Footer, Loader } from \"./components/widgets\";\nimport Page from './components/page';\nimport { contentService } from \"./services\";\n\nexport default class App extends Component {\n  state = {\n    loading: true\n  }\n\n\tconstructor(props) {\n    super(props);\n    this.contentService = contentService;\n  }\n\n\tcomponentDidMount() {\n    this.contentService.getAllPagesContent()\n      .then(pages => {\n        const links = pages.reduce((acc, page) => {\n            const { title, route } = page.fields;\n            if (route === '/') {\n              return [{ name: 'Home', route }, ...acc];\n            }\n            return [...acc, { name: title, route }];\n        }, []);\n\n        this.setState({\n          loading: false,\n          links,\n          pages\n        });\n      });\n  }\n\n\trender() {\n    const { loading, links, pages } = this.state;\n    if (loading) {\n      return <Loader />;\n    }\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t{/* <Navbar links={links} /> */}\n        {pages.map((page, index) => (\n          <Route key={index} path={page.fields.route} exact={page.fields.route === '/'}>\n            <Page content={page} />\n          </Route>\n        ))}\n\t\t\t\t<Footer />\n\t\t\t</Router>\n\t\t);\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { unregister } from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nunregister();\n"],"sourceRoot":""}